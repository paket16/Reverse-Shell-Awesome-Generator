name: Build DEB Package and Create Release

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code using git
      run: |
        git clone https://github.com/${{ github.repository }} .
        git checkout ${{ github.sha }}
      
    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential curl jq
        
    - name: Compile binary
      run: |
        gcc -static -O2 -Wall -o reverse-shell src/main.c src/reverse_shell.c src/templates.c
        chmod +x reverse-shell
        
    - name: Create DEB package structure
      run: |
        mkdir -p reverse-shell-pkg/usr/bin
        mkdir -p reverse-shell-pkg/DEBIAN
        cp reverse-shell reverse-shell-pkg/usr/bin/
        
    - name: Create control file
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        cat > reverse-shell-pkg/DEBIAN/control << EOF
        Package: reverse-shell-generator
        Version: $VERSION
        Section: net
        Priority: optional
        Architecture: amd64
        Depends: netcat, xclip
        Maintainer: ${{ github.actor }}
        Description: Reverse Shell Generator
        EOF
        
    - name: Build DEB package
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        dpkg-deb --build reverse-shell-pkg reverse-shell-generator_${VERSION}_amd64.deb
        echo "✅ DEB package built: reverse-shell-generator_${VERSION}_amd64.deb"
        
    - name: Create GitHub Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        echo "Creating release for tag: $TAG_NAME"
        echo "Repository: ${{ github.repository }}"
        
        # Создаем релиз через GitHub API
        response=$(curl -s -w "%{http_code}" -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d "{
            \"tag_name\": \"$TAG_NAME\",
            \"name\": \"Reverse Shell Generator v$VERSION\",
            \"body\": \"Reverse Shell Generator $VERSION - Automated build\",
            \"draft\": false,
            \"prerelease\": false
          }")
        
        http_code="${response: -3}"
        response_body="${response%???}"
        
        echo "HTTP Code: $http_code"
        echo "Response: $response_body"
        
        if [ "$http_code" -eq 201 ]; then
          echo "✅ Release created successfully"
          release_id=$(echo "$response_body" | jq -r .id)
          echo "release_id=$release_id" >> $GITHUB_OUTPUT
        else
          echo "❌ Failed to create release"
          echo "release_id=0" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: Upload DEB to Release
      if: steps.create_release.outputs.release_id != '0'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        RELEASE_ID=${{ steps.create_release.outputs.release_id }}
        
        echo "Uploading DEB to release ID: $RELEASE_ID"
        
        # Загружаем DEB файл в релиз
        upload_response=$(curl -s -w "%{http_code}" -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @"reverse-shell-generator_${VERSION}_amd64.deb" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=reverse-shell-generator_${VERSION}_amd64.deb")
        
        upload_code="${upload_response: -3}"
        
        if [ "$upload_code" -eq 201 ]; then
          echo "✅ DEB package uploaded successfully!"
        else
          echo "❌ Failed to upload DEB package"
          echo "Upload response: ${upload_response%???}"
        fi
        
    - name: Show final result
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "=== BUILD COMPLETED ==="
        echo "Version: $VERSION"
        echo "Tag: $TAG_NAME"
        echo "Package: reverse-shell-generator_${VERSION}_amd64.deb"
        echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME"
        ls -la *.deb