name: Build DEB Package and Create Release

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code using git
      run: |
        git clone https://github.com/${{ github.repository }} .
        git checkout ${{ github.sha }}
      
    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential curl jq
        
    - name: Compile binary
      run: |
        gcc -static -O2 -Wall -o reverse-shell src/main.c src/reverse_shell.c src/templates.c
        chmod +x reverse-shell
        
    - name: Create DEB package structure
      run: |
        mkdir -p reverse-shell-pkg/usr/bin
        mkdir -p reverse-shell-pkg/DEBIAN
        cp reverse-shell reverse-shell-pkg/usr/bin/
        
    - name: Create control file
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        cat > reverse-shell-pkg/DEBIAN/control << EOF
        Package: reverse-shell-generator
        Version: $VERSION
        Section: net
        Priority: optional
        Architecture: amd64
        Depends: netcat, xclip
        Maintainer: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        Description: Reverse Shell Generator - Advanced penetration testing tool
        Advanced tool for generating reverse shell payloads with multiple types,
        file export, clipboard support and automatic netcat listener.
        EOF
        
    - name: Build DEB package
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        dpkg-deb --build reverse-shell-pkg reverse-shell-generator_${VERSION}_amd64.deb
        
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # Создаем релиз через GitHub API
        response=$(curl -s -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d "{
            \"tag_name\": \"$TAG_NAME\",
            \"name\": \"Reverse Shell Generator v$VERSION\",
            \"body\": \"## Reverse Shell Generator v$VERSION\\n\\nAutomated DEB Package Build\\n\\n### Features:\\n- Multiple reverse shell types\\n- File export and clipboard support\\n- Automatic netcat listener\\n- Easy to use menu interface\\n\\n### Installation:\\n\\\`\\\`\\\`bash\\nsudo dpkg -i reverse-shell-generator_${VERSION}_amd64.deb\\n\\\`\\\`\\\`\\n\\n### Usage:\\n\\\`\\\`\\\`bash\\nreverse-shell\\n\\\`\\\`\\\`\",
            \"draft\": false,
            \"prerelease\": false
          }")
        
        echo "Release created"
        
    - name: Upload DEB to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # Получаем ID созданного релиза
        release_id=$(curl -s \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" | jq -r .id)
        
        # Загружаем DEB файл в релиз
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @"reverse-shell-generator_${VERSION}_amd64.deb" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=reverse-shell-generator_${VERSION}_amd64.deb"
        
        echo "✅ DEB package uploaded to release!"
        