name: Build DEB Package and Create Release

on:
  push:
    tags: ['v*']

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code using git
      run: |
        git clone https://github.com/${{ github.repository }} .
        git checkout ${{ github.sha }}
      
    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential curl jq
        
    - name: Compile binary
      run: |
        gcc -static -O2 -Wall -o reverse-shell src/main.c src/reverse_shell.c src/templates.c
        chmod +x reverse-shell
        
    - name: Create DEB package structure
      run: |
        mkdir -p reverse-shell-pkg/usr/bin
        mkdir -p reverse-shell-pkg/DEBIAN
        cp reverse-shell reverse-shell-pkg/usr/bin/
        
    - name: Create control file
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        cat > reverse-shell-pkg/DEBIAN/control << EOF
        Package: reverse-shell-generator
        Version: $VERSION
        Section: net
        Priority: optional
        Architecture: amd64
        Depends: netcat, xclip
        Maintainer: ${{ github.actor }}
        Description: Reverse Shell Generator
        EOF
        
    - name: Build DEB package
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        dpkg-deb --build reverse-shell-pkg reverse-shell-generator_${VERSION}_amd64.deb
        echo "‚úÖ DEB package built: reverse-shell-generator_${VERSION}_amd64.deb"
        
    - name: Create GitHub Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        echo "Creating release for tag: $TAG_NAME"
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitHub API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
        response=$(curl -L -s -w "|%{http_code}" -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/releases" \
          -d "{
            \"tag_name\": \"$TAG_NAME\",
            \"target_commitish\": \"main\",
            \"name\": \"Reverse Shell Generator v$VERSION\",
            \"body\": \"## Reverse Shell Generator v$VERSION\n\nAutomated DEB package build.\n\n### Features:\n- Multiple reverse shell payloads\n- File and clipboard export\n- Automatic netcat listener\n- User-friendly menu interface\n\n### Installation:\n\\\`\\\`\\\`bash\nsudo dpkg -i reverse-shell-generator_${VERSION}_amd64.deb\n\\\`\\\`\\\`\n\n### Usage:\n\\\`\\\`\\\`bash\nreverse-shell\n\\\`\\\`\\\`\",
            \"draft\": false,
            \"prerelease\": false,
            \"generate_release_notes\": false
          }")
        
        # –†–∞–∑–¥–µ–ª—è–µ–º response –∏ http code
        http_code="${response##*|}"
        response_body="${response%|*}"
        
        echo "HTTP Code: $http_code"
        echo "Response body: $response_body"
        
        if [ "$http_code" -eq 201 ]; then
          echo "‚úÖ Release created successfully"
          release_id=$(echo "$response_body" | jq -r .id)
          echo "release_id=$release_id" >> $GITHUB_OUTPUT
          upload_url=$(echo "$response_body" | jq -r .upload_url)
          echo "upload_url=${upload_url%\{*}" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Failed to create release"
          echo "Error: $response_body"
          exit 1
        fi
        
    - name: Upload DEB to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        UPLOAD_URL="${{ steps.create_release.outputs.upload_url }}"
        
        echo "Uploading DEB to: $UPLOAD_URL"
        echo "File: reverse-shell-generator_${VERSION}_amd64.deb"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º DEB —Ñ–∞–π–ª –≤ —Ä–µ–ª–∏–∑
        upload_response=$(curl -L -s -w "|%{http_code}" -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @"reverse-shell-generator_${VERSION}_amd64.deb" \
          "$UPLOAD_URL?name=reverse-shell-generator_${VERSION}_amd64.deb")
        
        upload_code="${upload_response##*|}"
        upload_body="${upload_response%|*}"
        
        echo "Upload HTTP Code: $upload_code"
        
        if [ "$upload_code" -eq 201 ]; then
          echo "‚úÖ DEB package uploaded successfully!"
          echo "Upload response: $upload_body"
        else
          echo "‚ùå Failed to upload DEB package"
          echo "Upload error: $upload_body"
          exit 1
        fi
        
    - name: Show final result
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "=== BUILD SUCCESSFUL ==="
        echo "üéâ Release created: https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME"
        echo "üì¶ Package: reverse-shell-generator_${VERSION}_amd64.deb"
        echo "üè∑Ô∏è Version: $VERSION"
        ls -la *.deb